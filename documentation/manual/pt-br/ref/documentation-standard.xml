<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 22743 -->
<!-- Reviewed: no -->
<appendix id="doc-standard">
    <title>Norma sobre a documentação do Zend Framework</title>

    <sect1 id="doc-standard.overview">
        <title>Visão Geral</title>

        <sect2 id="doc-standard.overview.scope">
            <title>Escopo</title>

            <para>
                Este documento fornece diretrizes para a criação da documentação de usuário final
                fornecida junto com o Zend Framework. É um guia destinado aos colaboradores do Zend
                Framework, que devem escrever a documentação como parte de suas contribuições de
                componentes, bem como aos tradutores de documentação. As normas contidas neste
                documento são destinadas a facilitar a tradução da documentação, minimizar as
                diferenças visuais e de estilo entre os diferentes arquivos de documentação, e
                facilitar a busca por diferenças na documentação com o comando
                <command>diff</command>.
            </para>

            <para>
                Você pode adotar e/ou modificar estas normas, em conformidade com os termos de nossa
                <ulink url="http://framework.zend.com/license">licença</ulink>.
            </para>

            <para>
                Os tópicos compreendidos nas normas sobre a documentação do Zend Framework incluem a
                formatação dos arquivos de documentação e recomendações sobre a qualidade da
                documentação.
            </para>
        </sect2>
    </sect1>

    <sect1 id="doc-standard.file-formatting">
        <title>Formatação dos Arquivos de Documentação</title>

        <sect2 id="doc-standard.file-formatting.xml-tags">
            <title>Tags XML</title>

            <para>
                Cada arquivo do manual deve incluir as seguintes declarações <acronym>XML</acronym>
                no topo do arquivo:
            </para>

            <programlisting language="xml"><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<!-- Reviewed: no -->
]]></programlisting>

            <para>
                Os arquivos <acronym>XML</acronym> provenientes de traduções devem também incluir
                uma tag de revisão contendo a revisão do arquivo correspondente em inglês na qual a
                tradução se baseou.
            </para>

            <programlisting language="xml"><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 14978 -->
<!-- Reviewed: no -->
]]></programlisting>
        </sect2>

        <sect2 id="doc-standard.file-formatting.max-line-length">
            <title>Comprimento Máximo da Linha</title>

            <para>
                O comprimento máximo da linha, incluindo tags, atributos e indentação, não deve
                exceder 100 caracteres. Existe apenas uma exceção a essa regra: os pares de atributo
                e valor são autorizados a ultrapassar os 100 caracteres, desde que não seja
                permitido estarem separados.
            </para>
        </sect2>

        <sect2 id="doc-standard.file-formatting.indentation">
            <title>Indentação</title>

            <para>
                A indentação deve ser composta por 4 espaços. Tabs não são permitidos.
            </para>

            <para>
                Tags que estão no mesmo nível devem ter a mesma indentação.
            </para>

            <programlisting language="xml"><![CDATA[
<sect1>
</sect1>

<sect1>
</sect1>
]]></programlisting>

            <para>
                Tags que estão um nível abaixo da tag anterior devem ser indentadas com 4 espaços
                adicionais.
            </para>

            <programlisting language="xml"><![CDATA[
<sect1>
    <sect2>
    </sect2>
</sect1>
]]></programlisting>

            <para>
                Vários elementos de bloco dentro de uma mesma linha não são permitidos, no entanto
                vários elementos inline são permitidos.
            </para>

            <programlisting language="xml"><![CDATA[
<!-- NÃO PERMITIDO -->
<sect1><sect2>
</sect2></sect1>

<!-- PERMITIDO -->
<para>
    <classname>Zend_Magic</classname> não existe. <classname>Zend_Acl</classname> existe.
</para>
]]></programlisting>
        </sect2>

        <sect2 id="doc-standard.file-formatting.line-termination">
            <title>Terminação de Linha</title>

            <para>
                A terminação de linha segue a convenção para arquivos de texto do Unix. As linhas
                devem terminar com um simples caractere line feed (LF). Caracteres line feed são
                representados pelo ordinal 10 ou hexadecimal 0x0A.
            </para>

            <para>
                Nota: Não utilize o carriage return (<acronym>CR</acronym>), como na convenção dos
                sistemas operacionais da Apple (0x0D) ou a combinação carriage return - line feed
                (<acronym>CRLF</acronym>) como no padrão para os sistemas operacionais Windows
                (0x0D, 0x0A).
            </para>
        </sect2>

        <sect2 id="doc-standard.file-formatting.empty-tags">
            <title>Tags vazias</title>

            <para>
                Tags vazias não são permitidas; todas as tags devem conter texto ou tags filhas.
            </para>

            <programlisting language="xml"><![CDATA[
<!-- NÃO PERMITIDO -->
<para>
    Algum texto. <link></link>
</para>

<para>
</para>
]]></programlisting>
        </sect2>

        <sect2 id="doc-standard.file-formatting.whitespace">
            <title>Uso de espaços em branco dentro de documentos</title>

            <sect3 id="doc-standard.file-formatting.whitespace.trailing">
                <title>Espaço em branco dentro de tags</title>

                <para>
                    Não deve haver nada imediatamente apoś as tags de abertura de elementos de bloco
                    além de uma quebra linha (e a indentação na linha seguinte).
                </para>

                <programlisting language="xml"><![CDATA[
<!-- NÃO PERMITIDO -->
<sect1>ESPAÇO
</sect1>
]]></programlisting>

                <para>
                    Não deve haver espaço em branco imediatamente após as tags de abertura de
                    elementos inline.
                </para>

                <programlisting language="xml"><![CDATA[
<!-- NÃO PERMITIDO -->
Esta é a classe <classname> Zend_Class</classname>.

<!-- PERMITIDO -->
Esta é a classe <classname>Zend_Class</classname>.
]]></programlisting>

                <para>
                    As tags de fechamento de elementos de bloco podem ser precedidos por espaços em
                    branco equivalentemente ao nível atual de indentação, mas não mais do que isso.
                </para>

                <programlisting language="xml"><![CDATA[
<!-- NÃO PERMITIDO -->
    <sect1>
     </sect1>

<!-- PERMITIDO -->
    <sect1>
    </sect1>
]]></programlisting>

                <para>
                    As tags de fechamento de elementos inline não devem ser precedidas por nenhum
                    espaço em branco.
                </para>

                <programlisting language="xml"><![CDATA[
<!-- NÃO PERMITIDO -->
Esta é a classe <classname>Zend_Class </classname>

<!-- PERMITIDO -->
Esta é a classe <classname>Zend_Class</classname>
]]></programlisting>
            </sect3>

            <sect3 id="doc-standard.file-formatting.whitespace.multiple-line-breaks">
                <title>Várias quebras de linha</title>

                <para>
                    Várias quebras de linha dentro ou entre as tags não são permitidas.
                </para>

                <programlisting language="xml"><![CDATA[
<!-- NÃO PERMITIDO -->
<para>
    Algum texto...

    ... e mais texto
</para>


<para>
    Outro parágrafo.
</para>

<!-- PERMITIDO -->
<para>
    Algum texto...
    ... e mais texto
</para>

<para>
    Outro parágrafo.
</para>
]]></programlisting>
            </sect3>

            <sect3 id="doc-standard.file-formatting.whitespace.tag-separation">
                <title>Separação entre as tags</title>

                <para>
                    Tags em um mesmo nível devem ser separadas por uma linha em branco para melhorar
                    a legibilidade.
                </para>

                <programlisting language="xml"><![CDATA[
<!-- NÃO PERMITIDO -->
<para>
    Algum texto...
</para>
<para>
    Mais texto...
</para>

<!-- PERMITIDO -->
<para>
    Algum texto...
</para>

<para>
    Mais texto...
</para>
]]></programlisting>

                <para>
                    O primeiro elemento filho de ser aberto diretamente abaixo de seu pai, sem linha
                    vazia entre eles. O último elemento filho deve ser fechado diretamente antes da
                    tag de fechamento de seu pai.
                </para>

                <programlisting language="xml"><![CDATA[
<!-- NÃO PERMITIDO -->
<sect1>

    <sect2>
    </sect2>

    <sect2>
    </sect2>

    <sect2>
    </sect2>

</sect1>

<!-- PERMITIDO -->
<sect1>
    <sect2>
    </sect2>

    <sect2>
    </sect2>

    <sect2>
    </sect2>
</sect1>
]]></programlisting>
            </sect3>
        </sect2>

        <sect2 id="doc-standard.file-formatting.program-listing">
            <title>Program Listings</title>

            <para>
                The opening <emphasis>&lt;programlisting&gt;</emphasis> tag must indicate the
                appropriate "language" attribute and be indented at the same level as its sibling
                blocks.
            </para>

            <programlisting language="xml"><![CDATA[
<para>Sibling paragraph.</para>

<programlisting language="php">]]>&lt;<![CDATA[![CDATA[
]]></programlisting>

            <para>
                <acronym>CDATA</acronym> should be used around all program listings.
            </para>

            <para>
                <emphasis>&lt;programlisting&gt;</emphasis> sections must not add linebreaks or
                whitespace at the beginning or end of the section, as these are then represented in
                the final output.
            </para>

            <programlisting language="xml"><![CDATA[
<!-- NOT ALLOWED -->
<programlisting language="php">]]>&lt;<![CDATA[![CDATA[

$render = "xxx";

]]]]>&gt;<![CDATA[</programlisting>

<!-- OK -->
<programlisting language="php">]]>&lt;<![CDATA[![CDATA[
$render = "xxx";
]]]]>&gt;<![CDATA[</programlisting>
]]></programlisting>

            <para>
                Ending <acronym>CDATA</acronym> and <emphasis>&lt;programlisting&gt;</emphasis>
                tags should be on the same line, without any indentation.
            </para>

            <programlisting language="xml"><![CDATA[
<!-- NOT ALLOWED -->
    <programlisting language="php">]]>&lt;<![CDATA[![CDATA[
$render = "xxx";
]]]]>&gt;<![CDATA[
    </programlisting>

<!-- NOT ALLOWED -->
    <programlisting language="php">]]>&lt;<![CDATA[![CDATA[
$render = "xxx";
    ]]]]>&gt;<![CDATA[</programlisting>

<!-- OK -->
    <programlisting language="php">]]>&lt;<![CDATA[![CDATA[
$render = "xxx";
]]]]>&gt;<![CDATA[</programlisting>
]]></programlisting>

            <para>
                The <emphasis>&lt;programlisting&gt;</emphasis> tag should contain the "language"
                attribute with a value appropriate to the contents of the program listing. Typical
                values include "css", "html", "ini", "javascript", "php", "text", and "xml".
            </para>

            <programlisting language="xml"><![CDATA[
<!-- PHP -->
<programlisting language="php">]]>&lt;<![CDATA[![CDATA[

<!-- Javascript -->
<programlisting language="javascript">]]>&lt;<![CDATA[![CDATA[

<!-- XML -->
<programlisting language="xml">]]>&lt;<![CDATA[![CDATA[
]]></programlisting>

            <para>
                For program listings containing only <acronym>PHP</acronym> code,
                <acronym>PHP</acronym> tags (e.g., "&lt;?php", "?&gt;") are not required, and
                should not be used. They simply clutter the narrative, and are implied by the use
                of the <emphasis>&lt;programlisting&gt;</emphasis> tag.
            </para>

            <programlisting language="xml"><![CDATA[
<!-- NOT ALLOWED -->
<programlisting language="php"]]>&lt;<![CDATA[![CDATA[<?php
    // ...
?>]]]]>&gt;<![CDATA[</programlisting>

<programlisting language="php"]]>&lt;<![CDATA[![CDATA[
<?php
    // ...
?>
]]]]>&gt;<![CDATA[</programlisting>
]]></programlisting>

            <para>
                Line lengths within program listings should follow the <link
                    linkend="coding-standard.php-file-formatting.max-line-length">coding standards
                recommendations</link>.
            </para>

            <para>
                Refrain from using <methodname>require_once()</methodname>,
                <methodname>require()</methodname>, <methodname>include_once()</methodname>, and
                <methodname>include()</methodname> calls within <acronym>PHP</acronym> listings.
                They simply clutter the narrative, and are largely obviated when using an
                autoloader. Use them only when they are essential to the example.
            </para>

            <note>
                <title>Never use short tags</title>

                <para>
                    Short tags (e.g., "&lt;?", "&lt;?=") should never be used within
                    <emphasis>programlisting</emphasis> or the narrative of a document.
                </para>
            </note>
        </sect2>

        <sect2 id="doc-standard.file-formatting.inline-tags">
            <title>Notes on specific inline tags</title>

            <sect3 id="doc-standard.file-formatting.inline-tags.classname">
                <title>classname</title>

                <para>
                    The tag <emphasis>&lt;classname&gt;</emphasis> must be used each time a class
                    name is represented by itself; it should not be used when combined with a
                    method name, variable name, or constant, and no other content is allowed within
                    the tag.
                </para>

                <programlisting language="xml"><![CDATA[
<para>
    The class <classname>Zend_Class</classname>.
</para>
]]></programlisting>
            </sect3>

            <sect3 id="doc-standard.file-formatting.inline-tags.varname">
                <title>varname</title>

                <para>
                    Variables must be wrapped in the <emphasis>&lt;varname&gt;</emphasis> tag.
                    Variables must be written using the "$" sigil. No other content is allowed
                    within this tag, unless a class name is used, which indicates a class variable.
                </para>

                <programlisting language="xml"><![CDATA[
<para>
    The variable <varname>$var</varname> and the class variable
    <varname>Zend_Class::$var</varname>.
</para>
]]></programlisting>
            </sect3>

            <sect3 id="doc-standard.file-formatting.inline-tags.methodname">
                <title>methodname</title>

                <para>
                    Methods must be wrapped in the <emphasis>&lt;methodname&gt;</emphasis> tag.
                    Methods must either include the full method signature or at the least a pair of
                    closing parentheses (e.g., "()"). No other content is allowed within this tag,
                    unless a class name is used, which indicates a class method.
                </para>

                <programlisting language="xml"><![CDATA[
<para>
    The method <methodname>foo()</methodname> and the class method
    <methodname>Zend_Class::foo()</methodname>. A method with a full signature:
    <methodname>foo($bar, $baz)</methodname>
</para>
]]></programlisting>
            </sect3>

            <sect3 id="doc-standard.file-formatting.inline-tags.constant">
                <title>constant</title>

                <para>
                    Use the <emphasis>&lt;constant&gt;</emphasis> tag when denoting constants.
                    Constants must be written in <acronym>UPPERCASE</acronym>. No other content is
                    allowed within this tag, unless a class name is used, which indicates a class
                    constant.
                </para>

                <programlisting language="xml"><![CDATA[
<para>
    The constant <constant>FOO</constant> and the class constant
    <constant>Zend_Class::FOO</constant>.
</para>
]]></programlisting>
            </sect3>

            <sect3 id="doc-standard.file-formatting.inline-tags.filename">
                <title>filename</title>

                <para>
                    Filenames and paths must be wrapped in the
                    <emphasis>&lt;filename&gt;</emphasis> tag. No other content is allowed in this
                    tag.
                </para>

                <programlisting language="xml"><![CDATA[
<para>
    The filename <filename>application/Bootstrap.php</filename>.
</para>
]]></programlisting>
            </sect3>

            <sect3 id="doc-standard.file-formatting.inline-tags.command">
                <title>command</title>

                <para>
                    Commands, shell scripts, and program calls must be wrapped in the
                    <emphasis>&lt;command&gt;</emphasis> tag. If the command includes arguments,
                    these should also be included within the tag.
                </para>

                <programlisting language="xml"><![CDATA[
<para>
    Execute <command>zf.sh create project</command>.
</para>
]]></programlisting>
            </sect3>

            <sect3 id="doc-standard.file-formatting.inline-tags.code">
                <title>code</title>

                <para>
                    Usage of the <emphasis>&lt;code&gt;</emphasis> tag is discouraged, in favor of
                    the other inline tasks discussed previously.
                </para>
            </sect3>
        </sect2>

        <sect2 id="doc-standard.file-formatting.block-tags">
            <title>Notes on specific block tags</title>

            <sect3 id="doc-standard.file-formatting.block-tags.title">
                <title>title</title>

                <para>
                    The <emphasis>&lt;title&gt;</emphasis> tag is not allowed to hold other tags.
                </para>

                <programlisting language="xml"><![CDATA[
<!-- NOT ALLOWED -->
<title>Using <classname>Zend_Class</classname></title>

<!-- OK -->
<title>Using Zend_Class</title>
]]></programlisting>
            </sect3>
        </sect2>
    </sect1>

    <sect1 id="doc-standard.recommendations">
        <title>Recommendations</title>

        <sect2 id="doc-standard.recommendations.editors">
            <title>Use editors without autoformatting</title>

            <para>
                For editing the documentation, typically you should not use formal
                <acronym>XML</acronym> editors. Such editors normally autoformat existing documents
                to fit their own standards and/or do not strictly follow the docbook standard. As
                examples, we have seen them erase the <acronym>CDATA</acronym> tags, change 4 space
                separation to tabs or 2 spaces, etc.
            </para>

            <para>
                The style guidelines were written in large part to assist translators in recognizing
                the lines that have changed using normal <command>diff</command> tools.
                Autoformatting makes this process more difficult.
            </para>
        </sect2>

        <sect2 id="doc-standard.recommendations.images">
            <title>Use Images</title>

            <para>
                Good images and diagrams can improve readability and comprehension. Use them
                whenever they will assist in these goals. Images should be placed in the
                <filename>documentation/manual/en/figures/</filename> directory, and be named after
                the section identifier in which they occur.
            </para>
        </sect2>

        <sect2 id="doc-standard.recommendations.examples">
            <title>Use Case Examples</title>

            <para>
                Look for good use cases submitted by the community, especially those posted in
                proposal comments or on one of the mailing lists. Examples often illustrate usage
                far better than the narrative does.
            </para>

            <para>
                When writing your examples for inclusion in the manual, follow
                all coding standards and documentation standards.
            </para>
        </sect2>

        <sect2 id="doc-standard.recommendations.phpdoc">
            <title>Avoid Replicating phpdoc Contents</title>

            <para>
                The manual is intended to be a reference guide for end-user usage. Replicating
                the phpdoc documentation for internal-use components and classes is not wanted, and
                the narrative should be focussed on usage, not the internal workings. In any case,
                at this time, we would like the documentation teams to focus on translating the
                English manual, not the phpdoc comments.
            </para>
        </sect2>

        <sect2 id="doc-standard.recommendations.links">
            <title>Use Links</title>

            <para>
                Link to other sections of the manual or to external sources
                instead of recreating documentation.
            </para>

            <para>
                Linking to other sections of the manual may be done using the
                <emphasis>&lt;link&gt;</emphasis> tag (to which you must provide link text).
            </para>

            <programlisting language="xml"><![CDATA[
<para>
    "Link" links to a section, using descriptive text: <link
        linkend="doc-standard.recommendations.links">documentation on
        links</link>.
</para>
]]></programlisting>

            <para>
                To link to an external resource, use <emphasis>&lt;ulink&gt;</emphasis>:
            </para>

            <programlisting language="xml"><![CDATA[
<para>
    The <ulink url="http://framework.zend.com/">Zend Framework site</ulink>.
</para>
]]></programlisting>
        </sect2>
    </sect1>
</appendix>
